dnl Process this file with autoconf to produce a configure script.
dnl Created by Anjuta - will be overwritten
dnl If you don't want it to overwrite it,
dnl 	Please disable it in the Anjuta project configuration

AC_INIT(configure.in)
AM_INIT_AUTOMAKE(netustad, 0.3.1)
AM_CONFIG_HEADER(include/config.h)
AC_PREFIX_DEFAULT([/usr/local])
if test "x${prefix}" = "xNONE"; then
  prefix=${ac_default_prefix}
fi
packageprefix=${prefix}
AC_ISC_POSIX
AC_CANONICAL_HOST

CFLAGS=""
AC_MSG_CHECKING([for supported operating system])
case "$host_os" in
linux*)
        AC_DEFINE([LINUX], 1, [Define for the Linux operating system.])
	scriptdir="linux"
        ;;
freebsd*)
        AC_DEFINE([FREEBSD], 1, [Define for the freebsd operating system.])
	scriptdir="freebsd"
	CFLAGS="${CFLAGS} -I/usr/local/include"	
	LDFLAGS="${LDFLAGS} -L/usr/local/lib"
	LIBS="${LIBS} -lintl"
	;;
*)
        AC_MSG_ERROR([Non supprted operating system: $host_os. exiting.])
        ;;
esac
AM_CONDITIONAL(OS_LINUX, test "x$scriptdir" = "xlinux")
AM_CONDITIONAL(OS_FREEBSD, test "x$scriptdir" = "xfreebsd")
AC_MSG_RESULT($host_os)
AC_SUBST(scriptdir)
AC_SUBST(host_os)

AC_SUBST(CFLAGS)
AC_PROG_CC
AC_PROG_AWK
AM_PROG_CC_STDC
AC_HEADER_STDC


dnl Checks for programs.
dnl Checks for libraries.
dnl Checks for header files.
dnl Checks for typedefs, structures, and compiler characteristics.
dnl Checks for library functions.
dnl Checks for Additional stuffs.
dnl if test "x$AWK"="xmawk"; then
dnl	AC_MSG_ERROR([mawk doesn't support FIELDWIDTHS property. install gawk or nawk.])
dnl fi
AC_MSG_CHECKING([for crypt library])
AC_CHECK_LIB([crypt], [crypt],[], \
		[AC_MSG_ERROR([crypt library not found])])
AC_CHECK_SSL
if test "x$HAVE_SSL"="xyes"; then
	AC_DEFINE_UNQUOTED([NUVERSION], ["${VERSION}-SSL"], [netUstad Version identifier])
	NUVERSION="${VERSION}-SSL"
else
	AC_DEFINE_UNQUOTED([NUVERSION], ["${VERSION}"], [netUstad Version identifier])
	NUVERSION="${VERSION}"
fi
AC_MSG_CHECKING([for development headers])
AC_CHECK_HEADERS([libintl.h arpa/inet.h fcntl.h locale.h \
			netinet/in.h stddef.h stdlib.h string.h strings.h \
			sys/socket.h sys/time.h syslog.h unistd.h],[], \
			[AC_MSG_ERROR([Development headers not found])])

AC_MSG_CHECKING([for low level functions])
AC_CHECK_FUNCS([dup2 inet_ntoa memchr memset realpath setlocale \
			socket strcasecmp strchr strdup strstr],[], \
			[AC_MSG_ERROR([low level functions not found])])

AC_CHECK_DECL(strdup,[], [AC_DEFINE(NO_STRDUP, 1,[no strdup])])
AC_CHECK_DECL(snprint, [AC_DEFINE(HAVE_SNPRINTF, 1, [have snprintf])], [])


case "$host_os" in
linux*)
	AC_PATH_PROG( [fw_cmd], [iptables], [FALSE], \
                                        [$PATH:/sbin:/usr/sbin:/usr/local/sbin] )
	;;
freebsd*)
	AC_PATH_PROG( [fw_cmd], [ipfw], [FALSE], \
                                        [$PATH:/sbin:/usr/sbin:/usr/local/sbin] )
	;;
esac

if test "x${fw_cmd}" = "xFALSE"; then
        AC_MSG_ERROR([firewall utility not found])
fi
AC_DEFINE_UNQUOTED(fw_cmd, "$fw_cmd", [ipfw utility path])
AC_PATH_PROG( [cat_cmd], [cat], [FALSE], [$PATH])
if test "x${cat_cmd}" = "xFALSE"; then
        AC_MSG_ERROR([cat not found])
fi
AC_DEFINE_UNQUOTED(cat_cmd, "$cat_cmd", [cat path])

AC_PATH_PROG( [awk_cmd], [awk], [FALSE], [$PATH])
if test "x${awk_cmd}" = "xFALSE"; then
        AC_MSG_ERROR([awk not found])
fi
AC_DEFINE_UNQUOTED(awk_cmd, "$awk_cmd", [awk path])
AC_SUBST(awk_cmd)

AC_PATH_PROG( [netstat_cmd], [netstat], [FALSE], [$PATH])
if test "x${netstat_cmd}" = "xFALSE"; then
        AC_MSG_ERROR([netstat not found])
fi
AC_DEFINE_UNQUOTED(netstat_cmd, "$netstat_cmd", [netstat path])

AC_PATH_PROG( [grep_cmd], [grep], [FALSE], [$PATH])
if test "x${grep_cmd}" = "xFALSE"; then
        AC_MSG_ERROR([grep not found])
fi
AC_DEFINE_UNQUOTED(grep_cmd, "$grep_cmd", [grep path])

AC_PATH_PROG( [tr_cmd], [tr], [FALSE], [$PATH])
if test "x${tr_cmd}" = "xFALSE"; then
        AC_MSG_ERROR([tr not found])
fi
AC_DEFINE_UNQUOTED(tr_cmd, "$tr_cmd", [tr path])

AC_PATH_PROG( [sed_cmd], [sed], [FALSE], [$PATH])
if test "x${sed_cmd}" = "xFALSE"; then
        AC_MSG_ERROR([sed not found])
fi
AC_DEFINE_UNQUOTED(sed_cmd, "$sed_cmd", [sed path])

AC_PATH_PROG( [tail_cmd], [tail], [FALSE], [$PATH])
if test "x${tail_cmd}" = "xFALSE"; then
        AC_MSG_ERROR([tail not found])
fi
AC_DEFINE_UNQUOTED(tail_cmd, "$tail_cmd", [tail path])

AC_PATH_PROG( [route_cmd], [route], [FALSE], [$PATH])
if test "x${route_cmd}" = "xFALSE"; then
        AC_MSG_ERROR([route not found])
fi
AC_DEFINE_UNQUOTED(route_cmd, "$route_cmd", [route path])

AC_PATH_PROG( [GETTEXTCMD], [gettext], [FALSE], [$PATH])
if test "x${GETTEXTCMD}" = "xFALSE"; then
	AC_MSG_ERROR([gettext binary not found]) 
fi
AC_DEFINE_UNQUOTED(gettext_cmd, "$GETTEXTCMD", [gettext binary path])

AC_PATH_PROG( [ifconfig_cmd], [ifconfig], [FALSE], [$PATH])
if test "x${ifconfig_cmd}" = "xFALSE"; then
	AC_MSG_ERROR([ifconfig tool not found]) 
fi
AC_DEFINE_UNQUOTED(ifconfig_cmd, "$ifconfig_cmd", [ifconfig tool path])

config_dir="$prefix/etc/$PACKAGE"
AC_SUBST(config_dir)

AC_DEFINE_UNQUOTED(workdir, "$prefix/share/$PACKAGE", [Program work directory])
AC_DEFINE_UNQUOTED(config_dir, "$config_dir",[Directory where the configuration files saved])
AC_DEFINE_UNQUOTED(default_conf_file, "$config_dir/netustad.conf",[Default Configuration File Path])


GETTEXT_PACKAGE=netustad
AC_SUBST(GETTEXT_PACKAGE)
AC_DEFINE_UNQUOTED(GETTEXT_PACKAGE, "$GETTEXT_PACKAGE", [Package name for gettext])


dnl Languages which your application supports
ALL_LINGUAS="tr"
AM_GNU_GETTEXT([external])
AM_GNU_GETTEXT_VERSION(0.10.40)

dnl Set PACKAGE_LOCALE_DIR in config.h.
if test "x${prefix}" = "xNONE"; then
  AC_DEFINE_UNQUOTED(PACKAGE_LOCALE_DIR, "${ac_default_prefix}/${DATADIRNAME}/locale")
else
  AC_DEFINE_UNQUOTED(PACKAGE_LOCALE_DIR, "${prefix}/${DATADIRNAME}/locale")
fi


dnl Set PACKAGE SOURCE DIR in config.h.
packagesrcdir=`cd $srcdir && pwd`

dnl Set PACKAGE DATA & DOC DIR
packagedatadir=share
packagedocdir=${packagedatadir}/doc/${PACKAGE}

dnl Set PACKAGE DIRS in config.h.
packagepixmapsdir=${packagedatadir}/pixmaps
packagehelpdir=${packagedatadir}/help
packagemenudir=${packagedatadir}

dnl Subst PACKAGE_DATA_DIR.
NO_PREFIX_PACKAGE_DATA_DIR="${packagedatadir}"
AC_SUBST(NO_PREFIX_PACKAGE_DATA_DIR)
PACKAGE_DATA_DIR="${packageprefix}/${packagedatadir}"
AC_SUBST(PACKAGE_DATA_DIR)

dnl Subst PACKAGE_DOC_DIR.
NO_PREFIX_PACKAGE_DOC_DIR="${packagedocdir}"
AC_SUBST(NO_PREFIX_PACKAGE_DOC_DIR)
PACKAGE_DOC_DIR="${packageprefix}/${packagedocdir}"
AC_SUBST(PACKAGE_DOC_DIR)

dnl Subst PACKAGE_PIXMAPS_DIR.
NO_PREFIX_PACKAGE_PIXMAPS_DIR="${packagepixmapsdir}"
AC_SUBST(NO_PREFIX_PACKAGE_PIXMAPS_DIR)
PACKAGE_PIXMAPS_DIR="${packageprefix}/${packagepixmapsdir}"
AC_SUBST(PACKAGE_PIXMAPS_DIR)

dnl Subst PACKAGE_HELP_DIR.
NO_PREFIX_PACKAGE_HELP_DIR="${packagehelpdir}"
AC_SUBST(NO_PREFIX_PACKAGE_HELP_DIR)
PACKAGE_HELP_DIR="${packageprefix}/${packagehelpdir}"
AC_SUBST(PACKAGE_HELP_DIR)

dnl Subst PACKAGE_MENU_DIR.
NO_PREFIX_PACKAGE_MENU_DIR="${packagemenudir}"
AC_SUBST(NO_PREFIX_PACKAGE_MENU_DIR)
PACKAGE_MENU_DIR="${packageprefix}/${packagemenudir}"
AC_SUBST(PACKAGE_MENU_DIR)

AC_DEFINE_UNQUOTED(PACKAGE_DATA_DIR, "${packageprefix}/${packagedatadir}")
AC_DEFINE_UNQUOTED(PACKAGE_DOC_DIR, "${packageprefix}/${packagedocdir}")
AC_DEFINE_UNQUOTED(PACKAGE_PIXMAPS_DIR, "${packageprefix}/${packagepixmapsdir}")
AC_DEFINE_UNQUOTED(PACKAGE_HELP_DIR, "${packageprefix}/${packagehelpdir}")
AC_DEFINE_UNQUOTED(PACKAGE_MENU_DIR, "${packageprefix}/${packagemenudir}")
AC_DEFINE_UNQUOTED(PACKAGE_SOURCE_DIR, "${packagesrcdir}")
AC_DEFINE_UNQUOTED(SERVER_STRING, "Server: netUstad/$NUVERSION", [Server Description ID])
AC_OUTPUT([
Makefile
po/Makefile.in
include/Makefile
src/Makefile
data/Makefile
data/netustadctl
data/images/Makefile
data/linux/Makefile
data/freebsd/Makefile
data/freebsd/writeconfig
data/freebsd/shownat
data/freebsd/nat_add
data/freebsd/nat_del
data/freebsd/nat_edit
data/netustad.conf
data/netustad.conf-dist
])

